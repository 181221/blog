<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title>Bricolage</title>
    <link>http://bricolage.io/</link>
    <updated>2015-06-16T20:31:53Z</updated>
    <author>
        <name>Kyle Mathews</name>
        <email>mathews.kyle@gmail.com</email>
        <uri>http://bricolage.io</uri>
    </author>
    <link rel="alternate" href="http://bricolage.io/"/>
    <subtitle>A blog by Kyle Mathews</subtitle>
    <rights>All rights reserved 2015, Kyle Mathews</rights>
    <generator>Feed for Node.js</generator>
    <contributor>
        <name>Kyle Mathews</name>
        <email>mathews.kyle@gmail.com</email>
    </contributor>
    <entry>
        <title type="html"><![CDATA[Tools to help administer your Facebook Groups]]></title>
        <id>http://bricolage.io/2014-05-20---tools-administer-facebook-groups/</id>
        <link href="http://bricolage.io/2014-05-20---tools-administer-facebook-groups/">
        </link>
        <updated>2014-05-20T23:46:37Z</updated>
        <content type="html"><![CDATA[<p>I’m an administrator for an active Facebook group. There’s about a 100 or so of us
that regularly post and discuss various issues. As most members live in or have some
connection to Silicon Valley, discussions tend to center around startup/technology issues.</p>
<p>Despite regular calls to try other group discussion solutions, we’ve never moved on.
Facebook Groups, while underpowered in many ways, has the key advantage that they’re on, well, Facebook.
Facebook is the common dominator of online social networks. Almost everyone has an
account and visits it at least once in a while. Which is great for helping keep
a group active. Asking a new member of the group to add yet another social network
to their online browsing routine seems like too big of hurdle.</p>
<p>So while the group has been a great success, the almost complete lack of adminstrative and analytics
tools can be frustrating. So recently I’ve started a project to work around this.
I’ve written two paired tools. The first, <code>facebook-export</code> handles connecting to Facebook’s API
and downloading member and posts information. The second, <code>facebook-analyze</code>, provides
several simple tools to help you understand and administer your groups.</p>
<p>Hopefully this is helpful to some of you. For installation and usage instructions, see
the <a href="https://github.com/KyleAMathews/facebook-export">Github repo</a>. Feedback and
pull requests welcome.</p>
]]></content>
        <author>
            <name>Kyle Mathews</name>
            <email>mathews.kyle@gmail.com</email>
            <uri>http://bricolage.io</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Hosting static sites with Docker and Nginx]]></title>
        <id>http://bricolage.io/2014-04-18---hosting-static-sites-with-docker-and-nginx/</id>
        <link href="http://bricolage.io/2014-04-18---hosting-static-sites-with-docker-and-nginx/">
        </link>
        <updated>2014-04-24T22:12:03Z</updated>
        <content type="html"><![CDATA[<p>For most of its life, this blog has run on Drupal. But as I no longer do Drupal
development, maintaining (and even using) Drupal feels like more and more of a burden.
So like the other <a href="https://twitter.com/paulg/status/402205795552489472">cool kids on the internet</a>
I decided to convert my site to a static website. Easy to host, zero security updates, and completely customizable.</p>
<p>I evaluated quite a few of the <a href="http://staticgen.com/">popular static site frameworks</a> out there e.g.
<a href="http://jekyllrb.com/">Jekyll</a> and <a href="http://docpad.org/">Docpad</a> but none of them
really attracted me. It seemed the problem of generating an HTML site was small enough
that with <a href="http://gulpjs.com">GulpJS</a>, a number of <a href="https://github.com/KyleAMathews/blog/blob/master/package.json">NPM modules</a>,
and some glue code I could easily build my own static site generator.</p>
<p>And as hoped, building a custom static site generator turned out to be straightforward.
Props to GulpJS and the vast treasure-trove of Node.js modules in the <a href="https://www.npmjs.org/">NPM repository</a>.
You can see the meat of the logic for generating this site <a href="https://github.com/KyleAMathews/blog/blob/master/gulpfile.coffee#L23-L78">at the blog’s repo</a>.</p>
<p>The next task was how to host the site. I briefly considered using Amazon S3, which is
a very attractive option as it’s very fast and essentially infinitely scalable, but decided against
it as I wanted a chance to play around with two other software tools, <a href="http://docker.io">Docker</a> and <a href="http://nginx.org/">Nginx</a>.</p>
<h2>Building applications with Docker</h2>
<p>Docker has really captured my and many other developers’ imaginations. Its primary
attraction to me is the utter simplicity it enables in packaging and deploying server applications.
Coming from years of writing complicated <a href="http://www.getchef.com/">Chef</a> or <a href="http://www.ansible.com/home">Ansible</a>
scripts, being able to bundle each applications’ dependencies together is a breath of
fresh air. <a href="http://c2.com/cgi/wiki?GlobalVariablesAreBad">Global variables (and packages) are bad</a>.
Docker lets you completely ignore the “global state” of the server that’s running
your application. It’s truly a “Write once, run anywhere” system. If it works on
your laptop, it’ll work in production no matter where or what it’s installed with.</p>
<p>This changes how you think about the boundaries of your application.
Consider my case of hosting this static website. Typically you’d think of this blog
as the collection of HTML, CSS, and images that make up the site.</p>
<p>What you think your application is affects how you deploy it. If your application is a bundle of files then
“deploying” means placing these files inside a software system that understands HTTP and can serve files, e.g. Apache or Nginx.</p>
<p>Compare this to how I’m using Docker for this blog. Instead of using a global Nginx instance
to serve my blog, I create a Docker image with Nginx <em>and</em> my blog’s files. Which makes the resulting “blog application”
an atomic unit that I can build, test, and run anywhere as many times as I want.</p>
<p>This is a much more preferable outcome. Instead of a messy collection of files as my outcome,
with Docker, I have a neat tidy Docker image. Now to to run a very high-performance blog, all I
need to do is type <code>docker run blog</code> and off it goes.</p>
<p>This makes some fun and useful things quite easy. E.g. while writing this post, I was curious how well
my blog would hold up under load testing. I didn’t want to use the container running the live
version of this blog for the testing as that would fill my access logs with useless entries.
So instead, I ran an additional instance of my Docker blog image on the
same server but listening on a different port. I used this twin
version of my blog to do the load testing and threw it away once the testing was finished. Setting up
a parallel version of this blog would be much more difficult with a global installation of Nginx.</p>
<h2>Docker layers</h2>
<p>Docker has an additional innovation which I love. Docker lets you create base images
which your application can build on. Since all static sites need about the same Nginx configuration,
I created a <a href="https://github.com/KyleAMathews/docker-nginx">Nginx Docker image</a>
I can use (and anyone else) as a base whenever building a new static website.</p>
<p>By encapsulating the Nginx configuration in an image, the Dockerfile (Docker’s DSL
for defining image builds) <a href="https://github.com/KyleAMathews/blog/blob/master/Dockerfile">for this blog</a> is incredibly simple. Three lines in fact.</p>
<pre><code class="language-bash">FROM kyma/docker-nginx
ADD public/ /var/www
CMD 'nginx'
</code></pre>
<p>The first line tells Docker to use my Nginx image as the base, the second says to add
the site’s files within the image at /var/www, and the third says to run Nginx when
a new container is started.</p>
<p>There’s tons of similar base images available on the public Docker image index for building <a href="https://index.docker.io/search?q=ruby">Ruby</a>,
<a href="https://index.docker.io/search?q=python">Python</a>, <a href="https://index.docker.io/search?q=go">Go</a>, etc. applications.
But it’s also trivial to create base images for your specific needs. For example, this is
a <a href="https://github.com/KyleAMathews/docker-nodejs-base/blob/master/Dockerfile">base image I wrote with the tools I commonly use to build web frontends</a>.
I’ve used it now for several side projects of mine.</p>
]]></content>
        <author>
            <name>Kyle Mathews</name>
            <email>mathews.kyle@gmail.com</email>
            <uri>http://bricolage.io</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[New Beginnings]]></title>
        <id>http://bricolage.io/2014-04-16---new-beginnings/</id>
        <link href="http://bricolage.io/2014-04-16---new-beginnings/">
        </link>
        <updated>2014-04-16T22:40:32Z</updated>
        <content type="html"><![CDATA[<p>Quick announcement post.</p>
<p>First I’m leaving <a href="http://getpantheon.com">Pantheon</a>, the startup I’ve been working at the past two years.
It’s been a fantastic run and I’ve loved working there. They have a great
team and product and it’s been a pleasure helping build the best Drupal (and now Wordpress)
professional website platform.</p>
<p>Highlights include helping with:</p>
<ul>
<li>Rebuilding the Pantheon dashboard from the ground up as a real-time single-page-app.</li>
<li><a href="http://techcrunch.com/2013/07/10/pantheon-multidev/">Multidev</a>—cloud development environments for teams.
Basically Git for the entire stack (files, DB, and code) not just code. It’s been a huge hit for customers with larger teams of developers.</li>
<li><a href="https://www.getpantheon.com/pantheon-one">Pantheon One</a>—a suite of tools for customers administering 100s to 1000s of websites.</li>
</ul>
<p>Now that I’ve left Pantheon, for the indefinite future I’ll be freelancing and working my way through a long list
of side-projects and books that have been accumulating. <a href="mailto:mathews.kyle@gmail.com">Contact me</a> if you have interesting
problems you’d like help with.</p>
<p>I’m also back in the blogging game. I rebuilt this blog recently as a static site with a custom theme and new domain name. There’s a number of topics, technical and otherwise, I’ll be exploring here in future months.</p>
]]></content>
        <author>
            <name>Kyle Mathews</name>
            <email>mathews.kyle@gmail.com</email>
            <uri>http://bricolage.io</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Humility and judgement]]></title>
        <id>http://bricolage.io/2011-12-30---humility-and-judgement/</id>
        <link href="http://bricolage.io/2011-12-30---humility-and-judgement/">
        </link>
        <updated>2011-12-30T03:48:00Z</updated>
        <content type="html"><![CDATA[<p>Ran across a lovely quote tonight. It expresses well a basic tenet of mine, that
people and groups do everything they do for a reason that grows out of their
beliefs, values, and understanding of the situation.</p>
<p>Nothing has changed me as much as trying to understand others.</p>
<blockquote>
<p>In the matter of reforming things, as distinct from deforming them, there is
one plain and simple principle; a principle which will probably be called a
paradox. There exists in such a case a certain institution or law; let us say,
for the sake of simplicity, a fence or gate erected across a road. The more
modern type of reformer goes gaily up to it and says, “I don’t see the use of
this; let us clear it away.” To which the more intelligent type of reformer will
do well to answer: “If you don’t see the use of it, I certainly won’t let you
clear it away. Go away and think. Then, when you can come back and tell me that
you do see the use of it, I may allow you to destroy it.”</p>
<p>This paradox rests on the most elementary common sense. The gate or fence did
not grow there. It was not set up by somnambulists who built it in their sleep.
It is highly improbable that it was put there by escaped lunatics who were for
some reason loose in the street. Some person had some reason for thinking it
would be a good thing for somebody. And until we know what the reason was, we
really cannot judge whether the reason was reasonable. It is extremely probable
that we have overlooked some whole aspect of the question, if something set up
by human beings like ourselves seems to be entirely meaningless and mysterious.
There are reformers who get over this difficulty by assuming that all their
fathers were fools; but if that be so, we can only say that folly appears to be
a hereditary disease. But the truth is that nobody has any business to destroy a
social institution until he has really seen it as an historical institution. If
he knows how it arose, and what purposes it was supposed to serve, he may really
be able to say that they were bad purposes, that they have since become bad
purposes, or that they are purposes which are no longer served. But if he simply
stares at the thing as a senseless monstrosity that has somehow sprung up in his
path, it is he and not the traditionalist who is suffering from an illusion.</p>
</blockquote>
<p>The article the quote came from is well worth reading as well.
<a href="http://www.janegalt.net/blog/archives/005244.html">http://www.janegalt.net/blog/archives/005244.html</a></p>
]]></content>
        <author>
            <name>Kyle Mathews</name>
            <email>mathews.kyle@gmail.com</email>
            <uri>http://bricolage.io</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Building your own tools]]></title>
        <id>http://bricolage.io/2011-10-28---building-your-own-tools/</id>
        <link href="http://bricolage.io/2011-10-28---building-your-own-tools/">
        </link>
        <updated>2011-10-28T08:00:37Z</updated>
        <content type="html"><![CDATA[<p>I was explaining to someone in IRC earlier this week about why I was <a href="/simplegtd">building my own project management software</a> and said it was basically because managing my projects and tasks (or more abstractly, what I pay attention to) is so critical to everything else I do that I want to control the software behind it.</p>
<p>Afterwards, that struck me as a rather important point. After some further thinking, my point is fairly close to the common business question of whether a particular service should be outsourced or kept in-house. There’s a lot that goes into making that decision but one pretty hard-and-fast rule is you never outsource a core competency.</p>
<p>I realized that in persisting in using poor-fitting tools for managing my attention, I had to some extent been outsourcing my core competency as a knowledge worker, i.e. defining what my work is and helping focus my attention. My ability to effectively do these two tasks has been hindered by using poor quality and poor fitting tools. <a href="http://en.wikiquote.org/wiki/Marshall_McLuhan">As Marshall Mcluhan said</a>, “we shape our tools and thereafter our tools shape us.” Tools can be powerful inhibitors or powerful enablers in all sorts of subtle and unexpected ways.</p>
<p>The last few weeks I’ve started paying much closer attention to the quality and fit of my intellectual tools and if I should bring any of their creation “in-house” and recreate them to meet my particular needs. Which is a tricky thing to decide. You don’t want, in a fit of vainglory, to go off and try to recreate <a href="http://en.wikipedia.org/wiki/Vim_(text_editor)">Vim</a> badly. I think in addition to my project management tool, I’ll be building a few writing tools. Beyond that I’ll wait to see how these first few experiments go.</p>
<p>What tools, intellectual or otherwise, have you built and how well did they work?</p>
]]></content>
        <author>
            <name>Kyle Mathews</name>
            <email>mathews.kyle@gmail.com</email>
            <uri>http://bricolage.io</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Chatroom Feature for Drupal 6.x built with Node.js and Backbone.js]]></title>
        <id>http://bricolage.io/2011-10-12---chatroom-feature-drupal-6x-built-nodejs-and-backbonejs/</id>
        <link href="http://bricolage.io/2011-10-12---chatroom-feature-drupal-6x-built-nodejs-and-backbonejs/">
        </link>
        <updated>2011-10-12T19:47:34Z</updated>
        <content type="html"><![CDATA[<p>Recently, for fun and learning, I built a group chatroom feature for Drupal 6.x. I’ve been learning and using <a href="http://nodejs.org">Node.js</a> and <a href="http://documentcloud.github.com/backbone/">Backbone.js</a> the past few months and building a chatroom seemed like a great project to stretch my skills.</p>
<p>I’ve recently pronounced it “finished” and the <a href="https://github.com/KyleAMathews/Eduglu-Chatroom">code is available on Github</a>. There are a few obscure bugs left but by and large, it’s plenty stable for those wanting a chatroom on Drupal 6.x.</p>
<p>The feature should work with any site using Spaces and Organic Groups. The demo site I setup, for example, is using a default installation of <a href="http://openatrium.com/">Open Atrium.</a></p>
<h2>Technology stack</h2>
<p>The chatroom is built using a now fairly standard set of technologies. For the backend, I used Node.js, <a href="http://redis.io">Redis</a>, and MySQL. I used <a href="http://socket.io">Socket.io</a> for sending the chat messages between clients and the server. I used <a href="http://brunchwithcoffee.com">Brunch</a> to build the frontend. Brunch bundles together a number of really nice tools for building single-page Javascript apps including <a href="http://jashkenas.github.com/coffee-script/">Coffeescript</a>, <a href="http://documentcloud.github.com/backbone/">Backbone.js</a>, <a href="http://documentcloud.github.com/underscore/">Underscore.js</a>, <a href="https://github.com/sstephenson/stitch">Stitch</a>, and <a href="https://github.com/sstephenson/eco">Eco</a>.</p>
<h2>A few conclusions</h2>
<p>Backbone.js rocks. It makes creating highly interactive, responsive interfaces almost trivial while keeping your code neatly organized. It’s a very neat round-up of the best patterns for creating Javascript applications.</p>
<p>Hand-rolling a way to securely connect Drupal and Node.js was a pain–probably the hardest part of building the feature. Use the <a href="http://drupal.org/project/nodejs">Node.js Integration module</a> if you’re on Drupal 7.</p>
<p>Redis is really impressive. It has one of the shallowest learning curve of any technology I’ve used. I was up and running with it in perhaps 15 minutes. Add that it’s incredibly fast and you have a very handy tool to add to your toolset.</p>
<p>Note: the demo site that was linked from here is now off-line.</p>
]]></content>
        <author>
            <name>Kyle Mathews</name>
            <email>mathews.kyle@gmail.com</email>
            <uri>http://bricolage.io</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[SimpleGTD]]></title>
        <id>http://bricolage.io/2011-10-07---simplegtd/</id>
        <link href="http://bricolage.io/2011-10-07---simplegtd/">
        </link>
        <updated>2011-10-07T18:59:39Z</updated>
        <content type="html"><![CDATA[<p>I’m starting work soon on building a new open source <a href="http://en.wikipedia.org/wiki/Getting_Things_Done">Getting Things Done</a> web app that I’m tentatively calling <a href="https://github.com/KyleAMathews/makersgtd">SimpleGTD</a>. I’ve tried a good chunk of the GTD apps out there and have been dissatisfied with each of them for one reason or another.</p>
<h2>Motivations</h2>
<p>I have a few reasons for starting this project.</p>
<p>First is I really like the GTD system. When it’s running well, I really do feel more organized and able to focus on my priorities. But I’ve never been able to find a system that was maintainable long-term. I’ve tried many that worked for a time but each gradually required more and more effort to maintain until eventually I had to quit using them. I’ve thought a fair bit about why they’ve failed and I believe I can create an app that will actually work long-term.</p>
<p>My second motivation is there’s a number of really cool technologies I’d like to learn or practice with including Node.js, Coffeescript, Backbone.js, ElasticSearch, Responsive Design, AppCache, and LocalStorage–each of which I’ll be using to build SimpleGTD. It’s really hard to learn new skills outside of the context of working toward a concrete goal so a nice compact project like this is gold.</p>
<p>My third motivation is to keep my startup “muscles” strong. For a variety of reasons, I’m not interested in doing another startup right now. But I will in the future. I plan to offer hosting and support for SimpleGTD app (for those not wanting to host it themselves). Doing the marketing, handling payments, support issues, etc. will allow me to practice all the parts of running a “real” company without the stress of caring whether my micro-business actually succeeds.</p>
<p>I have a number of similar side projects planned or in progress that I’ll also be treating as micro-businesses. I’m building these projects primarily for myself but it’ll be fun to also put them out in the wild and see what happens.</p>
<h2>Key design principles</h2>
<h3>Fast</h3>
<p><a href="http://thinkvitamin.com/web-apps/fred-wilsons-10-golden-principles-of-successful-web-apps/">To quote Fred Wilson</a>, “Speed is more than a feature. Speed is the most important feature. If your application is slow, people won’t use it.”</p>
<p>More than any other flaw, lack of speed is the reason I eventually have quit the software GTD apps I’ve tried. Paper is really fast. Compared to a piece of paper or sticky note sitting on your desk, it’s cumbersome to have to load a desktop or web app just to view your tasks.</p>
<p>To compete with paper, any software-based GTD system must load instantly and quickly show you exactly what you want.</p>
<p>Other actions, such as navigating, adding, and editing projects and actions must also be fast. My plan is that all movement within the application can be done via the keyboard, ala GMail.</p>
<p>To meet my speed standards, I’m going to use a variety of techniques. First all code and data will be stored locally using AppCache and LocalStorage. The app will load first from LocalStorage and only then sync with the server. This should solve much of the slow-start problem.</p>
<p>Second, I’ll build the app as a single-page app. All communication with the server will happen asynchronously. This means viewing a project page or adding a new task won’t require reloading the page so navigation within the app will be fast.</p>
<h3>Simple</h3>
<p>A big problem I’ve had with other systems I’ve tried is they’re too complex for my tastes. They try too hard. I don’t want to implement <a href="http://www.dragosroua.com/staying-gtd-over-the-hype/">every idea David Allen has ever come up with</a>. All I want my GTD app to do is add projects, add action items to these projects, and easily choose and sort the actions that I’ll be working on the next day or two.</p>
<p>Paper-like simplicity is my goal here, not Microsoft Project.</p>
<h3>Built for the 21st century</h3>
<p>This is the 21st century. Almost everyone now is carrying around a smartphone in their pocket 24/7. No one prints off todos anymore. You should be able to select your action items for the day on your computer, walk out the door, open the app on your phone and instantly see what needs to be done.</p>
<h2>Built to forgive and protect</h2>
<p>The above ideas are fairly standard. My last idea is a bit more unique.</p>
<p>Keeping task lists is a hard discipline and <a href="https://plus.google.com/114723964985237592593/posts/hsVEEpov6Ti">almost everyone fails at times</a>. Our tasks lists seem to quickly disintegrate into a disorganized, unwieldy mess without the occasional superhuman effort to clean things up. I’d like SimpleGTD to help us avoid that superhuman effort.</p>
<p>I think this is one reason I like paper. When a list of tasks on paper gets too overwhelming, you can just throw it away or bury it under other paper. Most GTD/Task software is less forgiving in this respect. If you add a project or task it’s there forever until you explicitly delete it.</p>
<p>The problem is our brains has a selective membrane of sorts for commitments. It requires little force to insert a commitment but quite a bit of force to remove it. We’re addicted to being “productive” and the rewards that come from completing tasks. With each added task, we imagine the praise we’ll get once we accomplish it. Each new task is a shot of dopamine. Deleting a task or project kills the hope for that future reward.</p>
<p>In my past forays with GTD software, I would cheerful add tasks and projects much faster than I could finish them. They would accumulate and accumulate until I dreaded even looking at the software with its long list of uncompleted tasks.</p>
<p>What we have is a garbage collection problem. We accumulate projects and tasks don’t throw out the ones we’ve abandoned. The garbage piles up higher and higher until eventually we have to abandon the house altogether and start a new one.</p>
<p>Like people portrayed on the TV show <a href="http://www.aetv.com/hoarders/about/">Hoarders</a>, we find it difficult to throw away commitments.</p>
<p>I think the weekly review is what’s supposed to corral this problem but I’ve never been able to do one consistently – most likely because I dread having to decide what projects/tasks to abandon.</p>
<p>So what we need is to have the software help us to delete projects/tasks that we can’t accomplish. As I’ve proven many-a-time, I can’t manually keep my tasks lists in check. What we need I think is a Roomba-like garbage collector that detects dying projects and cleans them up for us.</p>
<p>But how to detect those projects/tasks that have gone stale–those projects/tasks that we’ve effectively abandoned but haven’t yet told our consciousness? How can the software pick up on our unconscious cues that a task or project should be removed?</p>
<p>The best way I’ve thought of so far is to track how often we look at something. If we’re actually working on a project or task, we’ll be viewing or editing it fairly often. When we start to abandon a project or task, we stop looking at it. The software will track each time a project or task is viewed. If enough time passes since the last time you viewed the project, it’ll be garbage collected and removed from active view. For tasks, they’ll be removed from the active task list. For projects, they’ll be moved to the someday/maybe list. And for projects already in the someday/maybe list, eventually they’ll be moved into an archived list.</p>
<p>On timing, my thinking is tasks get garbage collected after 24 hours, projects after two months, and someday/maybe projects after six months.</p>
<p>So if you want a task or project to disappear, just ignore it and it’ll eventually go away. Which follows our natural pattern. If we don’t want to do something, we stop thinking about and eventually forget it. Most software has the annoying property of never forgetting.</p>
<p>At the start of the week, your active todos list should be white and empty, waiting for you to select the weeks tasks. If you load up a number of tasks at the beginning of the week but an emergency comes up, those tasks will silently disappear letting you focus on the emergency. If you’re heavily focused for a few months on a couple projects at work, all our other projects will kindly hide themselves in someday/maybe. If we abandon the GTD-ship in despair, when we come back, all our projects will be waiting in storage and easily reactivated.</p>
<h2>Moving forward</h2>
<p>I’m really excited about my plans. It should be a fun project technically and is software I could really use right now.</p>
<h3>How you can get involved</h3>
<p>I’d appreciate feedback on my ideas. If you’ve tried and failed with GTD in the past, why did you fail? How did the system you used (software or otherwise) help/hinder you? Did my analysis, that failure comes from an overload of low-priority projects/tasks, resonate with you? Am I missing anything obvious here?</p>
<p>Once I get a usable prototype built, I’d love beta testers. Please contact me if you’re interested in getting early access.</p>
]]></content>
        <author>
            <name>Kyle Mathews</name>
            <email>mathews.kyle@gmail.com</email>
            <uri>http://bricolage.io</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[It is the learners who inherit the future]]></title>
        <id>http://bricolage.io/2011-07-25---it-learners-who-inherit-future/</id>
        <link href="http://bricolage.io/2011-07-25---it-learners-who-inherit-future/">
        </link>
        <updated>2011-07-25T04:59:38Z</updated>
        <content type="html"><![CDATA[<blockquote>
<p>The central task of education is to implant a will and a facility for
learning; it should produce not learned but learning people. The truly human
society is a learning society, where grandparents, parents, and children are
students together.</p>
<p>In a time of drastic change it is the learners who
inherit the future. The learned usually find themselves equipped to live in a
world that no longer exists.</p>
</blockquote>
<p>–Eric Hoffer</p>
]]></content>
        <author>
            <name>Kyle Mathews</name>
            <email>mathews.kyle@gmail.com</email>
            <uri>http://bricolage.io</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Developing faith in God]]></title>
        <id>http://bricolage.io/2011-06-26---developing-faith-god/</id>
        <link href="http://bricolage.io/2011-06-26---developing-faith-god/">
        </link>
        <updated>2011-06-26T23:30:50Z</updated>
        <content type="html"><![CDATA[<p><em>The following is a talk I recently gave at the local <a href="http://lds.org">LDS church</a> I attend. Our church doesn’t have paid ministry meaning everyone who attends occasionally takes their turn preaching and exhorting.</em></p>
<p>I’d like to share today some things that I’ve learned about developing faith.</p>
<p>When I arrived on my mission, I thought I understood faith much better than I did. I was soon humbled to learn, as I tried to teach people, that no, I really didn’t know much about faith. Now properly contrite, I began my study of faith.</p>
<p>I think my favorite definition of faith in God is to have confidence that the Lord will do what He says He’ll do. But while this sounds simple, in practice it’s quite difficult. To fully have faith in the Lord, it’s not enough to believe in the Lord, we must actually understand what He will do in different situations.</p>
<p>This is why, I think, there’s such a strong connection between studying the gospel, personal revelation, and faith. Because the more we learn about the gospel, the better we understand what God will do and the more we can rely up on Him. The less we understand about the Lord and His gospel the harder it is to have confidence in the Lord because we won’t know what He says He will do and when He does do something, we are completely befuddled as to why He did what He did.</p>
<p>So to me, confidence or faith in the Lord comes from knowing Him and understanding what He does and why He does what He does.</p>
<p>It’s like having a really good friend who you’ve known forever. You know each other so well that you know how they’ll act when they’re happy, sad, disappointed, hurt, etc. Whatever the situation, you can pretty well predict how they’ll act. And you’ve also learned you can rely on them to comfort you when sad, to listen to a story when something good happens happen, to give good council when you have a problem.</p>
<p>Developing faith in the Lord is much the same. As we get to know the Lord, understand His character, like that friend, we will soon be able to predict how the Lord will act given a certain situation. And the better we know the Lord, the better we will be able to predict what He will do and the more we can rely on Him. So in other words, understanding the Lord and having faith in the Lord is one and the same.</p>
<p>But for this to happen, we need to have personal experiences with the Lord. If a friend wants to introduce you to another friend and raves about how cool they are and how much you’ll like them, you’ll trust their opinion but only so much. You need to meet this new person yourself before you’ll fully believe that they are as cool as your friend says.</p>
<p>This is why I think that’s why scripture study and personal revelation are so important. Because without those things, we cannot understand God or why He does what He does. And without that understanding we cannot place full confidence in Him.</p>
<p>And not having that understanding can cause a lot of problems. I think a lot of the difficulties we face in life, particularly ones that challenge our faith, are the result of ignorance or misunderstandings about God.</p>
<p>For example, a trap I often fall into is I ask for blessings that the Lord doesn’t want to give me. I will pray with great sincerity for long periods of time and when the Lord finally convinces me the answer is no, I’m bitterly disappointed. If I’d understood better what the Lord wants to give me before I tried asking then I wouldn’t of been disappointed, or even surprised for that matter, when the Lord said no. I used to wander at how the <a href="http://lds.org/scriptures/bofm/hel/10?lang=eng#7">Lord could promise certain prophets in the scriptures that whatever they asked for would be given them</a>. I don’t wander anymore because now it’s clear. The Lord could give them this power because He knew that these prophets understood Him and His plan so well that they would only ask for things He already intended to give them.</p>
<p>So all of us struggle at times with our faith in the Lord. How do we develop stronger faith in the Lord? I think the most straightforward answer to that question is simply, learn more about Him. Learn of His character. Learn of His promises. And learn about how and when He delivers on those promises.</p>
<p>Of course, doing this is easier said then done. I think this is the principle challenge of our life, learning about God and molding our lives after His.</p>
<p>I testify that the Lord cares very much that we understand Him correctly and He has given us many aids to learn of Him and He places experiences in our lives which, if we let them, will help us understand who He is and why He does what He does.</p>
<p>Now I want to share a few experiences where by learning more about the Lord, my faith was strengthened.</p>
<p>After spending the first part of my mission in the big city in Manila, I was transferred to a very rural farming area in Alfonso, Cavite, the province just south of Manila. After one transfer with my first companion there, I got a new companion and for the first time became a senior companion. And to be honest, I was kinda terrified. I didn’t have a lot of confidence yet in my Tagalog or in my abilities as a missionary but I really wanted to do a good job. And I was putting a lot of pressure on myself to measure up. Shortly after becoming a senior companion, I read a scripture which changed my mission and my life. It’s in <a href="http://lds.org/scriptures/dc-testament/dc/6?lang=eng#33">Doctrine and Covenants section 6 verse 34 and 36</a>. They read:</p>
<blockquote>
<p>34 Therefore, fear not, little flock; do good; let earth and hell combine against you, for if ye are built upon my rock, they cannot prevail.</p>
<p>36 Look unto me in every thought; doubt not, fear not.</p>
</blockquote>
<p>The effect of those scriptures on me was enormous. I realized much more clearly that I was on the Lord’s errand doing His will. And as long as I looked to the Lord in every thought and doubted not and feared not, He would guide, protect, and strengthen me enough to fulfill my duties as a missionary. After I read this, as we went around to our various appointments and some fear would come over me, I would repeat in my head over and over as a mantra of sorts, ‘‘look unto me in every thought; doubt not, fear not’’, and my fears would melt away.</p>
<p>My next experience was more recent. There was something I very much desired and wanted to pray to the Lord for His help in getting it. But for various reasons at the time I felt unworthy to ask, my imperfections and weaknesses seemed to be looming over me stronger than normal. About that time I read this from <a href="http://lds.org/scriptures/bofm/ether/3?lang=eng">Ether chapter 3 in the Book of Mormon</a>.</p>
<blockquote>
<p>2 Now behold, O Lord, and do not be angry with thy servant because of his weakness before thee; for we know that thou art holy and dwellest in the heavens, and that we are unworthy before thee; because of the fall our natures have become evil continually; nevertheless, O Lord, thou has given us a commandment that we must call upon thee, that from thee we many receive according to our desires.</p>
</blockquote>
<p>As the brother of Jared, I felt unworthy and somewhat evil at the time. But this scripture helped me realize that however unworthy I felt, I was compounding the problem by not praying for my desire. I realized that we don’t have to be perfect to be blessed by the Lord. I realized that no matter how unworthy or evil we think we are, the Lord still wants us to call on him. Because I understood this, my faith grew stronger that the Lord would bless me with the things I asked.</p>
<p>My last experience happened when I was suffering through a very difficult period of my life. There’s a story in the Book of Mormon I’ve always loved about the people led by Alma the Senior that broke away from King Noah and his people and established a new community. Soon however disaster struck and they were conquered and enslaved by a Lamenite army. I’ve always marveled at how well they stood up under this rather extreme trial. In <a href="http://lds.org/scriptures/bofm/mosiah/24?lang=eng#14">Mosiah 24:15</a> we read:</p>
<blockquote>
<p>15 And now it came to pass that the burdens which were laid upon Alma and his brethren were made light; yea, the Lord did strengthen them that they could bear up their burdens with ease, and <em>they did submit cheerfully and with patience to all the will of the Lord.</em></p>
</blockquote>
<p>I wandered how they were able to do that, ‘‘submit cheerfully and with patience to all the will of the Lord’’ as I most certainly was not feeling the least bit cheerful and patient at the time. Were they some sort of super-spiritual humans that could perform great feats of self-control that I could never hope to?</p>
<p>But then the Spirit gently told me I was misreading the story. He directed my attention again to the <a href="http://lds.org/scriptures/bofm/mosiah/24?lang=eng#13">previous verse</a>.</p>
<blockquote>
<p>14 And I will also ease the burdens which are put upon your shoulders, that even you cannot feel them upon your backs, even while you are in bondage.</p>
</blockquote>
<p>It wasn’t that these people were so special (though they were) that they were able to bear this trial with cheerfulness and patience, it was because the Lord blessed them that their burdens became light. The Spirit also directed me to <a href="http://lds.org/scriptures/dc-testament/dc/30?lang=eng">Doctrine and Covenants 30:1</a>.</p>
<blockquote>
<p>1 Behold, I say unto you, David, that you have feared man and <em>have not relied on me for strength as you ought.</em></p>
</blockquote>
<p>I felt this chastisement also applied to me. I thought I had to endure the trouble I was facing by myself and was not relying on the Lord for strength as I ought. Humbled, I prayed that the Lord would strengthen me. From then on through the end of the experience, when the trouble threatened to overwhelm me, I would stop and pray, ‘‘Lord, I can’t do this by myself, please help me’’, and soon, I found that my burdens too became much easier to bear.</p>
<p>I testify that the Lord does exist. That He does love us. That He is merciful and kind and just. And that He can and will fulfill every promise He has made. And that as we learn of Him, learn of His will for us, and align our lives with His will, our confidence in Him will wax strong and we will be richly blessed all of our days.</p>
]]></content>
        <author>
            <name>Kyle Mathews</name>
            <email>mathews.kyle@gmail.com</email>
            <uri>http://bricolage.io</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to create a résumé using Latex]]></title>
        <id>http://bricolage.io/2011-05-21---how-create-resume-using-latex/</id>
        <link href="http://bricolage.io/2011-05-21---how-create-resume-using-latex/">
        </link>
        <updated>2011-05-21T02:22:02Z</updated>
        <content type="html"><![CDATA[<p>Since <a href="/eduglu-enters-deadpool/">recent changes in my life</a> have forced me to look for new employment, I’ve had to relearn the long-forgotten art of writing a résumé. Since the actual process of writing a résumé is fairly straightforward, and boring, I decided to spice things up by figuring out how to do it in <a href="http://en.wikipedia.org/wiki/LaTeX">Latex</a>, a recent hobby of mine.</p>
<p>Googling found quite a few different Latex résumé templates to start from and my favorite by far was <a href="http://kjhealy.github.com/kjh-vita/">this one</a>, conveniently already on Github. So I quickly forked the example résumé and modified it to fit my needs. I was very happy how it turned out and think it looks miles better than any previous Microsoft Word template résumé I’ve produced.</p>
<p><a href="./kyle-mathews-resume_0.pdf">Download a copy of the finished résumé</a>. You can also see the source for the résumé at <a href="https://github.com/KyleAMathews/kjh-vita/blob/master/kyle-resume.tex">https://github.com/KyleAMathews/kjh-vita/blob/master/kyle-resume.tex</a>. Feel free to fork my version and modify to meet your needs. Most distributions of Latex should have all the dependencies you need. The three fonts I’ve used, Minion Pro, Myriad Pro, and Inconsolata are all freely available. The first two are distributed with Adobe Reader. The latter can be <a href="http://www.levien.com/type/myfonts/inconsolata.html">downloaded here.</a></p>
<h3>Update — just use <a href="http://sharelatex.com">http://sharelatex.com</a></h3>
<p>Since I wrote this post several years ago a new online Latex service <a href="http://sharelatex.com">Sharelatex</a> has been created. They have a fantastic selection of <a href="https://www.sharelatex.com/templates/cv-or-resume">Resume/CV Latex templates</a> and couldn’t be easier to use. Just <a href="https://www.sharelatex.com/templates/cv-or-resume">pick one of the templates</a> and start adding your information through their online editor.</p>
]]></content>
        <author>
            <name>Kyle Mathews</name>
            <email>mathews.kyle@gmail.com</email>
            <uri>http://bricolage.io</uri>
        </author>
    </entry>
</feed>